/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.StudentCourses;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentCoursesRecord extends UpdatableRecordImpl<StudentCoursesRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>students_db.student_courses.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>students_db.student_courses.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>students_db.student_courses.course_id</code>.
     */
    public void setCourseId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>students_db.student_courses.course_id</code>.
     */
    public Integer getCourseId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StudentCourses.STUDENT_COURSES.STUDENT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return StudentCourses.STUDENT_COURSES.COURSE_ID;
    }

    @Override
    public Integer component1() {
        return getStudentId();
    }

    @Override
    public Integer component2() {
        return getCourseId();
    }

    @Override
    public Integer value1() {
        return getStudentId();
    }

    @Override
    public Integer value2() {
        return getCourseId();
    }

    @Override
    public StudentCoursesRecord value1(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public StudentCoursesRecord value2(Integer value) {
        setCourseId(value);
        return this;
    }

    @Override
    public StudentCoursesRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentCoursesRecord
     */
    public StudentCoursesRecord() {
        super(StudentCourses.STUDENT_COURSES);
    }

    /**
     * Create a detached, initialised StudentCoursesRecord
     */
    public StudentCoursesRecord(Integer studentId, Integer courseId) {
        super(StudentCourses.STUDENT_COURSES);

        setStudentId(studentId);
        setCourseId(courseId);
        resetChangedOnNotNull();
    }
}
